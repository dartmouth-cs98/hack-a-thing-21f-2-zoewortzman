{"version":3,"sources":["stores/UserStore.js","InputField.js","SubmitButton.js","LoginForm.js","App.js","reportWebVitals.js","index.js"],"names":["extendObservable","this","loading","isLoggedIn","username","InputField","className","type","props","value","onChange","e","target","React","Component","SubmitButton","disabled","onClick","text","LoginForm","state","password","buttonDisabled","property","val","trim","lengeth","setState","a","passwrod","fetch","method","headers","body","JSON","stringify","res","json","result","sucess","UserStore","success","resetForm","alert","msg","console","log","placeholder","setInputValue","onClicl","doLogin","App","userName","clasName","doLogout","observer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e820db0c.chunk.js","sourcesContent":["import { extendObservable } from 'mobx';\n\n/**\n * UserStore\n */\n\nclass UserStore {\n    constructor () {\n        extendObservable(this, {\n            loading: true,\n            isLoggedIn: false,\n            username: ''\n        })\n    }\n}\n\nexport default new UserStore();","import React from 'react';\n\nclass InputField extends React.Component {\n  render() {\n\n    return (\n      <div className='inputField'>\n        <input\n          className='input'\n          type={this.props.type}\n          value={this.props.value}\n          onChange={ (e) => this.props.onChange(e.target.value) }\n        />\n      </div>\n    );\n  }\n}\n\nexport default InputField;\n","import React from 'react';\n\nclass SubmitButton extends React.Component {\n  render() {\n\n    return (\n      <div className=\"submitButton\">\n        <button\n          className='btn'\n          disabled={this.props.disabled}\n          onClick={ () => this.props.onClick() }\n        >\n          {this.props.text}\n\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default SubmitButton;\n","import React from 'react';\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport UserStore from './stores/UserStore';\nimport { unstable_renderSubtreeIntoContainer } from 'react-dom';\n\n\nclass LoginForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      buttonDisabled: false\n\n    }\n  }\n\n  setInputValue(property,val) {\n    val =val.trim();\n    if (val.lengeth >12) {\n      return;\n    }\n    this.setState({\n      [property]: val\n\n    })\n  }\n\n  resetForm() {\n    this.setState({\n      username: '',\n      password: '',\n      buttonDisabled: false\n    })\n  }\n\n  async doLogin() {\n    if (!this.state.username) {\n      return;\n    }\n    if (!this.state.passwrod) {\n      return\n    }\n\n    this.setState({\n      buttonDisabled: true\n    })\n\n    try {\n      let res = await fetch('/login', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Conent-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.state.username,\n          password: this.state.password\n\n        })\n      });\n      let result = await res.json();\n      if (result && result.sucess) {\n        UserStore.isLoggedIn = true;\n        UserStore.username=result.username;\n      }\n      else if (result &&result.success === false) {\n        this.resetForm();\n        alert(result.msg);\n\n      }\n    }\n    catch(e) {\n      console.log(e);\n      this.resetForm();\n    }\n\n  }\n\n  render() {\n    return (\n      <div className=\"loginForm\">\n        Log in \n        <InputField\n          type='text'\n          placeholder='Username'\n          value={this.state.username ? this.state.username : ''}\n          onChange={ (val) => this.setInputValue('username', val)}\n        />\n\n        <InputField\n          type='password'\n          placeholder='Password'\n          value={this.state.password ? this.state.username : ''}\n          onChange={ (val) => this.setInputValue('password', val)}\n        />\n\n        <SubmitButton \n          text ='Login'\n          disabled={this.state.buttonDisabled}\n          onClicl={ () => this.doLogin}\n        />\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import React from 'react';\nimport { observer } from 'mobx-react';\nimport UserStore from './stores/UserStore';\nimport LoginForm from './LoginForm';\nimport InputField from './InputField';\nimport SubmitButton from './SubmitButton';\nimport './App.css';\n\nclass App extends React.Component {\n\n  async componentDidMount() {\n    try { \n\n      let res = await fetch ('/isLoggedIn', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = true;\n        UserStore.username = result.username;\n      }\n\n      else {\n        UserStore.loading = false;\n        UserStore.isLoggedIn = false;\n      }\n\n    }\n    catch (e) {\n      UserStore.loading = false;\n      UserStore.isLoggedIn = false;\n    }\n  }\n\n  async doLogout() {\n    try { \n\n      let res = await fetch ('/logout', {\n        method: 'post',\n        headers: {\n          'Accept': 'application/json',\n          'Content-type': 'application/json'\n        }\n      });\n\n      let result = await res.json();\n\n      if (result && result.success) {\n        UserStore.isLoggedIn = false;\n        UserStore.userName = '';\n\n      }\n\n    }\n    catch (e) {\n      console.log(e)\n    };\n  }\n\n  render() {\n\n    if (UserStore.loading) {\n      return (\n        <div className=\"app\">\n          <div className='container'>\n            Loading, please wait...\n          </div>\n        </div>\n      );\n    }\n\n    else {\n      if (UserStore.isLoggedIn) {\n      return (\n        <div clasName=\"app\">\n          <div className='container'>\n             Welcome {UserStore.username}\n\n              <SubmitButton\n                text={'Log out'}\n                disabled={false}\n                onClick={ () => this.doLogout()}\n               />\n            </div>\n          </div>\n        );\n      }\n\n      return (\n        <div className=\"app\">\n          <div className='containter'>\n            <LoginForm />\n          </div>\n\n        </div>\n      );\n    }\n  }\n}\n\nexport default observer(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}